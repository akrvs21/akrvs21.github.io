<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>ExampleSite</title>
    <link>https://akrvs21.github.io/</link>
    <description>Recent content on ExampleSite</description>
    <image>
      <url>https://akrvs21.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://akrvs21.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://akrvs21.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to load and cache images from URL to RecyclerView without using 3rd party libraries</title>
      <link>https://akrvs21.github.io/posts/async_recycler_view/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/async_recycler_view/</guid>
      <description>What is the goal? In the last post, I demonstated how to create a RecyclerView and load data from the external API, particularly we used Picasso library to load and cache images for us. In this post I will show how to mannually do that without use of any libraries. For the purpose of easy reading, I will start from the begging and go through all the steps one more time.</description>
    </item>
    
    <item>
      <title>How to populate RecyclerView with data from server</title>
      <link>https://akrvs21.github.io/posts/recyclerview/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/recyclerview/</guid>
      <description>What is the goal? In this article, I will review how to create a custom RecyclerView, how to fetch the data from the external API using Retrofit, and display the result in the RecyclerView. This tutorial will mainly consist of 3 steps. In step #1 I will design an individual row layout, in step #2 will create a RecyclerView adapter, in step #3 fetch the data from the server and feed it to RecyclerView.</description>
    </item>
    
    <item>
      <title>Making a private cloud with Virtual Box</title>
      <link>https://akrvs21.github.io/posts/private_cloud/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/private_cloud/</guid>
      <description>Making a private cloud with Virtual Box In this lab we are going to learn how to install, configure and understand how the cloud technology work. I&amp;rsquo;m using Win10 in the host computer and Ubuntu for Virtual machine. For virtualization,in this example, i use Virtual Box, can use VMware as well(steps almost same). You can donwnload all the above software in the links below:
Ubuntu Virtual Box Virtual Box Extension 1) First do the installation of Virtual Box and install Ubuntu on it.</description>
    </item>
    
    <item>
      <title>What is Docker and How to use it</title>
      <link>https://akrvs21.github.io/posts/docker/</link>
      <pubDate>Fri, 25 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/docker/</guid>
      <description>What is Docker and How to use it Docker is a container management service. The keywords of Docker are develop, ship and run anywhere. The whole idea of Docker is for developers to easily develop applications, ship them into containers which can then be deployed anywhere.
First install Docker
on Linux (Ubuntu):
$ sudo apt-get install \  apt-transport-https \  ca-certificates \  curl \  gnupg-agent \  software-properties-common Add official GPG key of docker:</description>
    </item>
    
    <item>
      <title>Installing And Setting Up Go language Environment on Ubuntu 18.04 in 8 Steps</title>
      <link>https://akrvs21.github.io/posts/goonubuntu/</link>
      <pubDate>Sat, 12 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/goonubuntu/</guid>
      <description>Installing And Setting Up Go language Environment on Ubuntu 18.04 in 8 Steps   Download the latest version of Go from official website
  In terminal install the downloaded package with this command:
sudo dpkg -i &amp;lt;packagename.deb&amp;gt;
Another way of downloading Go is directly from the terminal, but it downloads the old version which won&amp;rsquo;t work for some projects:
sudo apt-get install golang
  Check the version:</description>
    </item>
    
  </channel>
</rss>
