<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>RecyclerView on ExampleSite</title>
    <link>https://akrvs21.github.io/tags/recyclerview/</link>
    <description>Recent content in RecyclerView on ExampleSite</description>
    <image>
      <url>https://akrvs21.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://akrvs21.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 15 Apr 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://akrvs21.github.io/tags/recyclerview/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to load and cache images from URL to RecyclerView without using 3rd party libraries</title>
      <link>https://akrvs21.github.io/posts/async_recycler_view/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/async_recycler_view/</guid>
      <description>What is the goal? In the last post, I demonstated how to create a RecyclerView and load data from the external API, particularly we used Picasso library to load and cache images for us. In this post I will show how to mannually do that without use of any libraries. For the purpose of easy reading, I will start from the begging and go through all the steps one more time.</description>
    </item>
    
    <item>
      <title>How to populate RecyclerView with data from server</title>
      <link>https://akrvs21.github.io/posts/recyclerview/</link>
      <pubDate>Tue, 29 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://akrvs21.github.io/posts/recyclerview/</guid>
      <description>What is the goal? In this article, I will review how to create a custom RecyclerView, how to fetch the data from the external API using Retrofit, and display the result in the RecyclerView. This tutorial will mainly consist of 3 steps. In step #1 I will design an individual row layout, in step #2 will create a RecyclerView adapter, in step #3 fetch the data from the server and feed it to RecyclerView.</description>
    </item>
    
  </channel>
</rss>
